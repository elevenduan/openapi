{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample API",
    "description": "based on the OpenAPI 3.0 specification.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "login",
      "description": "登录相关"
    },
    {
      "name": "account",
      "description": "账户相关"
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "tags": ["login"],
        "operationId": "userLogin",
        "description": "登录",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["available", "pending", "sold"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 16
                    },
                    "username": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": ["id", "username"]
                }
              }
            }
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": ["account"],
        "operationId": "userAccount",
        "description": "账户",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "accid": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "count": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "example": "approved",
            "enum": ["placed", "approved", "delivered"]
          },
          "complete": {
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "maxItems": 3
            },
            "minItems": 1,
            "maxItems": 2
          },
          "uuid": {
            "type": "string",
            "x-faker": "datatype.uuid"
          },
          "city": {
            "type": "string",
            "x-mock": "Random.city"
          },
          "url": {
            "type": "string",
            "x-mock": {
              "Random.url": "http"
            }
          }
        }
      }
    }
  }
}
